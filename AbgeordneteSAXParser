package org.Parser;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import java.io.File;
import java.net.URL;

public class AbgeordneteSAXParser {
    public static void main(String[] args) {
        try {
            // 创建 SAXParser 工厂
            URL resource = AbgeordneteSAXParser.class.getClassLoader().getResource("MdB-Stammdaten/MDB_STAMMDATEN.XML");
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();

            // 指定 XML 文件路径
            File xmlFile = new File(resource.getPath());

            // 调用解析器并指定事件处理器
            saxParser.parse(xmlFile, new DefaultHandler() {
                private String currentElement = ""; // 当前标签名
                private String currentID = "";     // 当前议员的 ID

                @Override
                public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
                    currentElement = qName; // 当前标签名

                    // 如果是 <MDB> 标签，读取 ID 属性
                    if ("MDB".equals(qName)) {
                        currentID = attributes.getValue("ID");
                        System.out.println("Person ID: " + currentID);
                    }
                }

                @Override
                public void characters(char[] ch, int start, int length) throws SAXException {
                    // 获取标签的内容，去除多余空格
                    String content = new String(ch, start, length).trim();
                    if (!content.isEmpty() && !currentElement.isEmpty()) {
                        System.out.println(currentElement + " = " + content);
                    }
                }

                @Override
                public void endElement(String uri, String localName, String qName) throws SAXException {
                    // 结束标签时清空当前标签名
                    currentElement = "";
                }
            });

            System.out.println("XML Parsing completed!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

